@model Application.ViewModel.GBAcc.Setups.ChartOfAccounts.CreateActivityCenter.CreateActivityCenterVM
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiForgeryToken
@{
    var token = antiForgeryToken.GetAndStoreTokens(Context);
    ViewData[PageInfo.PageHeader] = "Create ActivityCenter";
    ViewData[PageInfo.PageTitle] = "ActivityCenter";
}

<div class="card card-primary">
    <form id="frmActivityCenter">
        <input type="hidden" asp-for="LevelID" />
        <input type="hidden" asp-for="ActivityID" />
        <div class="row m-0">
            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0 required" asp-for="BusinessID"></label>
                    <select asp-for="BusinessID" class="form-control form-control-sm" asp-items="Model.DDLBusiness"></select>
                    <span asp-validation-for="BusinessID" class="span-form-validation text-danger"></span>
                </div>
            </div>
            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0 required" asp-for="CostCenterID"></label>
                    <select asp-for="CostCenterID" class="form-control form-control-sm" asp-items="Model.DDLCostCenter"></select>
                    <span asp-validation-for="CostCenterID" class="span-form-validation text-danger"></span>
                </div>
            </div>

            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0 required" asp-for="Activity"></label>
                    <input type="text" class="form-control form-control-sm " asp-for="Activity" placeholder="Activity Center" autocomplete="off">
                    <span asp-validation-for="Activity" class="span-form-validation "></span>
                </div>
            </div>
            <div class="col-sm-2 col-md-2 col-lg-2">
                <label class="col-form-label-sm m-0">&nbsp;</label>
                <div class="form-group" style="text-align:center">
                    <input type="button" class="btn btn-sm btn-success" id="btnSave" value="Save">
                </div>
            </div>
        </div>
    </form>

    <div class="row m-0">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div id="grid">
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">
          $(function () {
            GetActivityCenterList();
              $('#BusinessID').change(function () {
                  let businessID = RtnNumber($("#BusinessID").val());//
                  HttpRequest.DropDown('GET', '/Setups/ChartOfAccounts/DDLCostCenter', { BusinessID: businessID }, 'CostCenterID')
              })
              $('#BusinessID').trigger('change');
              $('#btnSave').click(function () {
            debugger
                  if ($('#frmActivityCenter').valid()) {
                      let AccID = RtnNumber($("#ActivityID").val())
                      let costCenterID = RtnNumber($("#CostCenterID").val());//
                      let activity = $('#Activity').val();
                      let levelID = RtnNumber($("#LevelID").val());

                obj = {
                    AccID: AccID,
                    AccName: activity,
                    ParentID: costCenterID,
                    LevelID: levelID
                }
                      if (obj.AccID>0) {
                          HttpRequest.Ajax("PUT", '/Setups/ChartOfAccounts/BasicCoaUpdate', { "ReqModel": obj , '@token.HeaderName': '@token.RequestToken'}, saveSuccess);
                } else {
                          HttpRequest.Ajax("POST", '/Setups/ChartOfAccounts/BasicCoaSave', { "ReqModel": obj , '@token.HeaderName': '@token.RequestToken'}, saveSuccess);
                }
            }
        })
          })
        function saveSuccess(data) {
            debugger
            if (data.result == 1) {
                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {
                        Clear();
                        GetActivityCenterList();
                        $("#btnSave").val('Save');
                        // window.location.href = '/setup/CompanyInfo/Index';
                    }
                });
            }
            else {
                $.alert.open("error", data.message);
            }
        }

        function GetActivityCenterList() {

            var url = "/Setups/ChartOfAccounts/GetActivityCenterList";

            var dataGrid = $("#grid").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "ActivityID",
                    loadUrl: url,
                   // loadParams: requestModel
                }),

                remoteOperations: {
                    paging: true,
                    sorting: true,
                    filtering: true,
                },
                showColumnLines: false,
                showRowLines: true,
                showBorders: true,
                paging: {
                    pageSize: 10
                },
                pager: {
                    showInfo: true,
                    allowedPageSizes: [10, 20, 40, 100, 500],
                    showPageSizeSelector: true,
                },
                loadingIndicator: {
                    enabled: true
                },
                selection: { mode: 'single' },
                headerFilter: { visible: false, allowSearch: true },
                filterRow: { visible: false },
                wordWrapEnabled: true,
                columns: [
                    {
                        dataField: "ActivityID",
                        visible: false,
                    },
                    {
                        width: "5%",
                        caption: "SL",
                        alignment: 'center',
                        cellTemplate: function (cellElement, cellInfo) {
                            var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
                            cellElement.text(index)
                        }

                    },


                    {

                        caption: "Company",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: "CompanyName",
                    },
                    {

                        caption: "Business",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: "Business",

                    },
                    {

                        caption: "Cost",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: "CostCenter",

                    },
                    {

                        caption: "Activity",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: "Activity",

                    },

                    {
                        width: "10%",
                        caption: "Action",
                        alignment: 'center',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        },
                        cellTemplate: function (container, options) {

                            var returnText = `<button class="btn btn-xs btn-warning" > <i class="fa fa-edit" ></i></button>`;
                            $(returnText).on('dxclick', function () {
                                DataEdit(options.data.BusinessID, options.data.CostCenterID, options.data.ActivityID, options.data.Activity, options.data.LevelID );
                            }).appendTo(container);

                            //var returnText = `<span>&nbsp</span><button class="btn btn-xs btn-danger" > <i class="fa fa-trash"></i></button>`;
                            //returnText = returnText + '</div>';
                            //$(returnText).on('dxclick', function () {
                            //   // DataDelete(options.data.BankID);
                            //}).appendTo(container);


                        },
                    },
                ],

                //  groupPanel: { visible: true },

                height: 520,

            }).dxDataGrid("instance");
        }
        function Clear() {
          $("#BusinessID").val('');
            $("#CostCenterID").val('');//
            $("#Activity").val('')
        }
        function DataEdit(BusinessID, CostCenterID, ActivityID, Activity, LevelID) {
            $("#LevelID").val(LevelID)
            $("#BusinessID").val(BusinessID);
            HttpRequest.DropDown('GET', '/Setups/ChartOfAccounts/DDLCostCenter', { BusinessID: BusinessID }, 'CostCenterID')
            $("#CostCenterID").val(CostCenterID);//
            $('#ActivityID').val(ActivityID);
            $("#Activity").val(Activity)
            $("#btnSave").val('Update');
        }
    </script>

}

