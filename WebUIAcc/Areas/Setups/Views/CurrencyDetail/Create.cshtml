@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery antiForgeryToken
@model Application.ViewModel.GBAcc.Setups.CurrencyDetails.Create.CurrencyDetailVM
@{
    var token = antiForgeryToken.GetAndStoreTokens(Context);
    ViewData[PageInfo.PageHeader] = "Currency Details";
    ViewData[PageInfo.PageTitle] = "Currency Details";
}
<div class="card card-primary">
    <form id="frmCurrencyDetail">
        <input type="hidden" asp-for="ID" />
        <div class="row m-0">
            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0 required" asp-for="CurrencyID"></label>
                    <select asp-for="CurrencyID" class="form-control form-control-sm" asp-items="Model.DDLCurrencyList"></select>
                    <span asp-validation-for="CurrencyID" class="span-form-validation text-danger"></span>
                </div>
            </div>
            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0 required" asp-for="RateInBDT"></label>
                    <input type="text" class="form-control form-control-sm " asp-for="RateInBDT" placeholder="Rate" autocomplete="off">
                    <span asp-validation-for="RateInBDT" class="span-form-validation text-danger"></span>
                </div>
            </div>
            <div class="col-sm-3 col-md-3 col-lg-3">
                <div class="form-group">
                    <label class="col-form-label-sm m-0" asp-for="Date"></label>
                    <input type="text" class="form-control form-control-sm dateField" readonly asp-for="Date" autocomplete="off">
                    <span asp-validation-for="Date" class="span-form-validation "></span>
                </div>
            </div>
            <div class="col-sm-2 col-md-2 col-lg-2">
                <label class="col-form-label-sm m-0">&nbsp;</label>
                <div class="form-group" style="text-align:center">
                    <input type="button" class="btn btn-sm btn-success" id="btnSave" value="Save">
                </div>
            </div>
        </div>
    </form>

    <div class="row m-0">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div id="grid">
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script type="text/javascript">
        $(function () {
            GetCurrencyDetailList();
            $('#btnSave').click(function () {
            debugger
                if ($('#frmCurrencyDetail').valid()) {
                    let iD = RtnNumber($("#ID").val());//
                    let currencyID = RtnNumber($("#CurrencyID").val());
                    let rateInBDT = RtnFloatUpToPrecision($('#RateInBDT').val(),3);
                    let date = $('#Date').val();//Abbreviation
                    if (rateInBDT==0) {
                        $.alert.open('error', 'Currency rate greater than zero required')
                        return false;
                    }
                obj = {
                    ID: iD,
                    CurrencyID: currencyID,
                    RateInBDT: rateInBDT,
                    Date: date,
                }
                    if (obj.ID>0) {
                        HttpRequest.Ajax("PUT", '/Setups/CurrencyDetail/CurrencyDetailUpdate', { "currencyDetailDTM": obj , '@token.HeaderName': '@token.RequestToken'}, saveSuccess);
                } else {
                        HttpRequest.Ajax("POST", '/Setups/CurrencyDetail/CurrencyDetailSave', { "currencyDetailDTM": obj , '@token.HeaderName': '@token.RequestToken'}, saveSuccess);
                }
            }
        })
    })

        function saveSuccess(data) {
            debugger
            if (data.result == 1) {
                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {
                        Clear();
                        GetCurrencyDetailList();
                          $("#btnSave").val('Save');
                        // window.location.href = '/setup/CompanyInfo/Index';
                    }
                });
            }
            else {
                $.alert.open("error", data.message);
            }
        }

        function GetCurrencyDetailList() {

            var url = "/Setups/CurrencyDetail/GetCurrencyDetailList";

       // var dataGridrow;
        var dataGrid =   $("#grid").dxDataGrid({
            dataSource: DevExpress.data.AspNet.createStore({
                key: "ID",
                loadUrl: url,
            }),

            remoteOperations: {
                paging: true,
                sorting: true,
                filtering: true,
            },
            showColumnLines: false,
            showRowLines: true,
            showBorders:true,
            paging: {
                pageSize: 10
            },
            pager: {
                showInfo: true,
                allowedPageSizes: [10,20, 40, 100, 500],
                showPageSizeSelector: true,
            },
            loadingIndicator: {
                enabled: true
            },
            selection: { mode: 'single' },
            headerFilter: { visible: false  ,allowSearch: true },
            filterRow: { visible: false },
            wordWrapEnabled: true,
            columns: [
                {
                    dataField: "ID",
                    visible: false,
                },
                {
                    width: "5%",
                    caption: "SL",
                    alignment: 'center',
                    cellTemplate: function (cellElement, cellInfo) {
                        var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
                        cellElement.text(index)
                    }

                },


                {

                    caption: "Currency",
                    wordWrapEnabled: false,
                    alignment: 'center',
                    allowFiltering: false,
                    dataField: "Currency",
                },
                {

                    caption: "Rate (BDT)",
                    wordWrapEnabled: false,
                    alignment: 'center',
                    allowFiltering: false,
                    dataField: "RateInBDT",

                },
                {

                    caption: "Date",
                    wordWrapEnabled: false,
                    alignment: 'center',
                    allowFiltering: false,
                    dataField: "Date",

                },

                {
                    width: "10%",
                    caption: "Action",
                    alignment: 'center',
                    headerCellTemplate: function (header, info) {
                        $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                    },
                    cellTemplate: function (container, options) {

                        var returnText = `<button class="btn btn-xs btn-warning" > <i class="fa fa-edit" ></i></button>`;
                        $(returnText).on('dxclick', function () {
                            DataEdit(options.data.ID, options.data.CurrencyID, options.data.RateInBDT, options.data.Date,);
                        }).appendTo(container);

                        var returnText = `<span>&nbsp</span><button class="btn btn-xs btn-danger" > <i class="fa fa-trash"></i></button>`;
                        returnText = returnText + '</div>';
                        $(returnText).on('dxclick', function () {
                            DataDelete(options.data.ID);
                        }).appendTo(container);
                    },
                },
            ],

          //  groupPanel: { visible: true },

            height: 520,

        }).dxDataGrid("instance");
    }
        function Clear() {
            $("#ID").val('');
            $("#CurrencyID").val('');
            $('#RateInBDT').val('');
            $('#Date').val('@Model.Date');
        }
        function DataEdit(id,currencyID,rate,data) {
            $("#ID").val(id);
            $("#CurrencyID").val(currencyID);
            $('#RateInBDT').val(rate);
            $('#Date').val(data);
            $('#btnSave').val('Update')
        }
        function DataDelete(id) {
            $.alert.open('confirm', 'Are you sure to delete this record?', function (button) {
                if (button == 'yes') {
                    HttpRequest.Ajax("DELETE", '/Setups/CurrencyDetail/CurrencyDetailDelete', { Id: id}, DeleteSuccess);

                } else {
                    return false;
                }
            });


        }
        function DeleteSuccess(data) {
            debugger
            if (data.result == 1) {
                $.alert.open({
                    type: 'Success',
                    content: data.message,
                    callback: function () {
                       GetCurrencyDetailList();
                    }
                });
            }
            else {
                $.alert.open("error", data.message);
            }
        }
    </script>
}