#pragma checksum "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\Setups\Views\Customer\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "297cd96be2961bcb359cbf846b0fed84c87380b6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Setups_Views_Customer_Index), @"mvc.1.0.view", @"/Areas/Setups/Views/Customer/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\_ViewImports.cshtml"
using WebUIAcc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\_ViewImports.cshtml"
using WebUIAcc.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\_ViewImports.cshtml"
using Application.Common.Utilities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\_ViewImports.cshtml"
using Microsoft.AspNetCore.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"297cd96be2961bcb359cbf846b0fed84c87380b6", @"/Areas/Setups/Views/Customer/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ef3a46f35ab1cff9ac89e08f4196106a1d391315", @"/Areas/_ViewImports.cshtml")]
    #nullable restore
    public class Areas_Setups_Views_Customer_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Github C#\GBangla.Acc\WebUIAcc\Areas\Setups\Views\Customer\Index.cshtml"
  

    ViewData[PageInfo.PageHeader] = "Customer List";
    ViewData[PageInfo.PageTitle] = "Index";
    ViewData[PageInfo.btnText1] = "Create New";
    ViewData[PageInfo.PageLink1] = "/Setups/Customer/Create";
    ViewData[PageInfo.btnClass1] = "btn-success";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"card card-primary\">\r\n    <br />\r\n    <div class=\"row m-0\">\r\n        <div class=\"col-md-12 col-sm-12 col-xs-12\">\r\n            <div id=\"grid\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(function () {

            GetCustomerList();
        })

        function GetCustomerList() {
            var url = ""/Setups/Customer/GetCustomerList"";
            // var dataGridrow;
            var dataGrid = $(""#grid"").dxDataGrid({
                dataSource: DevExpress.data.AspNet.createStore({
                    key: ""CustomerID"",
                    loadUrl: url,
                }),

                remoteOperations: {
                    paging: true,
                    sorting: true,
                    filtering: true,
                },
                showColumnLines: false,
                showRowLines: true,
                showBorders: true,
                paging: {
                    pageSize: 10
                },
                pager: {
                    showInfo: true,
                    allowedPageSizes: [10, 20, 40, 100, 500],
                    showPageSizeSelector: true,
                },
          ");
                WriteLiteral(@"      loadingIndicator: {
                    enabled: true
                },
                selection: { mode: 'single' },
                headerFilter: { visible: false, allowSearch: true },
                filterRow: { visible: false },
                wordWrapEnabled: true,
                columns: [
                    {
                        dataField: ""CustomerID"",
                        visible: false,
                    },
                    {
                        width: ""5%"",
                        caption: ""SL"",
                        alignment: 'center',
                        cellTemplate: function (cellElement, cellInfo) {
                            var index = dataGrid.pageIndex() * dataGrid.pageSize() + cellInfo.rowIndex + 1;
                            cellElement.text(index)
                        }

                    },


                    {
                        caption: ""Category"",
                        wordWrapEnabled: false,
            ");
                WriteLiteral(@"            alignment: 'center',
                        allowFiltering: false,
                        dataField: ""AccCategory"",
                    },
                    {

                        caption: ""Sub Category"",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: ""AccSubCategory"",

                    },
                    {

                        caption: ""Broad Group"",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: ""AccBroadGroup"",

                    },
                    {

                        caption: ""Narrow Group"",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: ""AccNarrowGroup"",
");
                WriteLiteral(@"
                    },
                    {

                        caption: ""Identification"",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: ""AccIdentification"",

                    },
                    {

                        caption: ""Customer"",
                        wordWrapEnabled: false,
                        alignment: 'center',
                        allowFiltering: false,
                        dataField: ""CustomerName"",

                    },

                    {
                        width: ""10%"",
                        caption: ""Action"",
                        alignment: 'center',
                        headerCellTemplate: function (header, info) {
                            $('<div>').html(info.column.caption).css('font-weight', 'bold').appendTo(header);
                        },
                        cellTemplate: fu");
                WriteLiteral(@"nction (container, options) {

                            var returnText = `<a href=""/Setups/Customer/Edit?customerID=${options.data.CustomerID}"" class=""btn btn-xs btn-warning""><i class=""fa fa-edit""></i></a>` //`<button class=""btn btn-xs btn-warning"" > <i class=""fa fa-edit"" ></i></button>`;
                            $(returnText).on('dxclick', function () {
                                //  DataEdit(options.data.BranchID, options.data.BranchName, options.data.BankID, options.data.BranchAddress,);
                            }).appendTo(container);

                            //var returnText = `<span>&nbsp</span><button class=""btn btn-xs btn-danger"" > <i class=""fa fa-trash""></i></button>`;
                            //returnText = returnText + '</div>';
                            //$(returnText).on('dxclick', function () {
                            //    //  DataDelete(options.data.BranchID);
                            //}).appendTo(container);


                        },
          ");
                WriteLiteral("          },\r\n                ],\r\n\r\n                //  groupPanel: { visible: true },\r\n\r\n                height: 520,\r\n\r\n            }).dxDataGrid(\"instance\");\r\n        }\r\n\r\n    </script>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
